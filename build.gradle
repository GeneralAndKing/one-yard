buildscript {
    ext {
        springBootVersion = '2.2.0.RELEASE'
    }
    repositories {
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        google()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'idea'
}

allprojects {
    group = 'in.gaks'
    version = '1.0.0-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        mavenCentral()
    }

}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('springCloudVersion', "Hoxton.RC1")
    set('guavaVersion', "28.1-jre")
    set('gsonVersion', "2.8.6")
    set('jetbrainsVersion', "17.0.0")
    set('graphqlJavaVersion', "0.0.4")
}

dependencies {
    implementation(
            "com.google.guava:guava:${guavaVersion}",
            "com.google.code.gson:gson:${gsonVersion}",
            "org.jetbrains:annotations:${jetbrainsVersion}",
            "io.leangen.graphql:graphql-spqr-spring-boot-starter:${graphqlJavaVersion}"
    )
    implementation (
            'org.springframework.boot:spring-boot-starter-websocket',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-web',
            'io.projectreactor:reactor-core'
    )
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }
    testImplementation(
            'org.springframework.security:spring-security-test',
            'org.junit.jupiter:junit-jupiter-api',
            'org.junit.jupiter:junit-jupiter-params'
    )
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    runtimeOnly 'mysql:mysql-connector-java'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

idea {
    module {
        downloadSources = true
    }
}
